{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CPS-DLLO#14\\\\FSBootcamp\\\\part1\\\\src\\\\components\\\\Weather.jsx\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = ({\n  capital,\n  lat,\n  lng\n}) => {\n  const api_key = process.env.REACT_APP_API_KEY; // const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${api_key}`\n\n  const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${capital}&appid=${api_key}`;\n  const [weather, setWeather] = useState({});\n  useEffect(() => {\n    axios.get(weatherUrl).then(response => {\n      setWeather(response.data);\n    });\n  }, []);\n\n  if (weather.main !== undefined) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather in \", capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"temperature \", weather.main.temp, \" Celsius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/10d@2x.png`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"wind \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  } else return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Cant reach weather of \", capital]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n};\n\nexport default Weather;","map":{"version":3,"sources":["C:/Users/CPS-DLLO#14/FSBootcamp/part1/src/components/Weather.jsx"],"names":["axios","useState","useEffect","Weather","capital","lat","lng","api_key","process","env","REACT_APP_API_KEY","weatherUrl","weather","setWeather","get","then","response","data","main","undefined","temp","wind","speed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,GAAT;AAAaC,EAAAA;AAAb,CAAD,KAAuB;AACnC,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B,CADmC,CAEnC;;AACA,QAAMC,UAAU,GAAI,qDAAoDP,OAAQ,UAASG,OAAQ,EAAjG;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CACDc,GADJ,CACQH,UADR,EAEKI,IAFL,CAEUC,QAAQ,IAAI;AACdH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACH,KAJL;AAKC,GANI,EAMF,EANE,CAAT;;AAQI,MAAGL,OAAO,CAACM,IAAR,KAAiBC,SAApB,EAA8B;AAC1B,wBACI;AAAA,8BACI;AAAA,kCAAgBf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mCAAgBQ,OAAO,CAACM,IAAR,CAAaE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,GAAG,EAAG,6CAAX;AAAyD,QAAA,GAAG,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,4BAASR,OAAO,CAACS,IAAR,CAAaC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAQH,GATD,MAUK,oBAAO;AAAA,yCAA0BlB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["import axios from \"axios\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst Weather = ({capital,lat,lng}) => {\r\n    const api_key = process.env.REACT_APP_API_KEY\r\n    // const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${api_key}`\r\n    const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${capital}&appid=${api_key}`\r\n    const [weather, setWeather] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.\r\n            get(weatherUrl)\r\n            .then(response => {\r\n                setWeather(response.data)\r\n            })\r\n        }, [])\r\n\r\n        if(weather.main !== undefined){\r\n            return(\r\n                <>\r\n                    <h2>Weather in {capital}</h2>\r\n                    <p>temperature {weather.main.temp} Celsius</p>\r\n                    <img src={`http://openweathermap.org/img/wn/10d@2x.png`} alt=\"\"/>\r\n                    <p>wind {weather.wind.speed} m/s</p>\r\n                </>\r\n            )\r\n        } \r\n        else return <p>Cant reach weather of {capital}</p>\r\n}\r\n\r\nexport default Weather"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CPS-DLLO#14\\\\FSBootcamp\\\\part1\\\\src\\\\components\\\\Countries.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  countries,\n  filter\n}) => {\n  let filterCountry = countries.filter(country => country.name.common.toLowerCase().includes(filter.toLowerCase()) //country.name.common.toLowerCase().indexOf(filter.toLowerCase()) !== -1\n  );\n  return filterCountry.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Too many matches, specify another filter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 37\n  }, this) : filterCountry.length > 1 ? filterCountry.map(filteredCountry => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: filteredCountry.name.common\n  }, filteredCountry.name.common, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 75\n  }, this)) : filterCountry.map(filteredCountry => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: filteredCountry.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", filteredCountry.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"area \", filteredCountry.area]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"languages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), console.log(Object.entries(filteredCountry.languages)), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: filteredCountry.flags.png,\n      alt: `${filteredCountry.name.common} flag`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, filteredCountry.name.common, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this));\n};\n\nexport default Countries;","map":{"version":3,"sources":["C:/Users/CPS-DLLO#14/FSBootcamp/part1/src/components/Countries.jsx"],"names":["Countries","countries","filter","filterCountry","country","name","common","toLowerCase","includes","length","map","filteredCountry","capital","area","console","log","Object","entries","languages","flags","png"],"mappings":";;;AAAA,MAAMA,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACvC,MAAIC,aAAa,GAAGF,SAAS,CAACC,MAAV,CAAkBE,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CN,MAAM,CAACK,WAAP,EAA3C,CAA9B,CAA+F;AAA/F,GAApB;AAEA,SACIJ,aAAa,CAACM,MAAd,GAAuB,EAAvB,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5B,GACAN,aAAa,CAACM,MAAd,GAAuB,CAAvB,GAA2BN,aAAa,CAACO,GAAd,CAAmBC,eAAD,iBAAqB;AAAA,cAAuCA,eAAe,CAACN,IAAhB,CAAqBC;AAA5D,KAASK,eAAe,CAACN,IAAhB,CAAqBC,MAA9B;AAAA;AAAA;AAAA;AAAA,UAAvC,CAA3B,GACAH,aAAa,CAACO,GAAd,CAAmBC,eAAD,iBAClB;AAAA,4BACI;AAAA,gBAAKA,eAAe,CAACN,IAAhB,CAAqBC;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAAYK,eAAe,CAACC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,0BAASD,eAAe,CAACE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMKC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAP,CAAeN,eAAe,CAACO,SAA/B,CAAZ,CANL,eAOI;AAAK,MAAA,GAAG,EAAEP,eAAe,CAACQ,KAAhB,CAAsBC,GAAhC;AAAqC,MAAA,GAAG,EAAG,GAAET,eAAe,CAACN,IAAhB,CAAqBC,MAAO;AAAzE;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAAUK,eAAe,CAACN,IAAhB,CAAqBC,MAA/B;AAAA;AAAA;AAAA;AAAA,UADA,CAHJ;AAgBH,CAnBD;;AAqBA,eAAeN,SAAf","sourcesContent":["const Countries = ({countries, filter}) => {\r\n    let filterCountry = countries.filter((country) => country.name.common.toLowerCase().includes(filter.toLowerCase()) //country.name.common.toLowerCase().indexOf(filter.toLowerCase()) !== -1\r\n    )\r\n    return(\r\n        filterCountry.length > 10 ? <p>Too many matches, specify another filter</p> :\r\n        filterCountry.length > 1 ? filterCountry.map((filteredCountry) => <li key={filteredCountry.name.common}>{filteredCountry.name.common}</li>) :\r\n        filterCountry.map((filteredCountry) => \r\n        <div key={filteredCountry.name.common}>            \r\n            <h2>{filteredCountry.name.common}</h2>\r\n            <p>capital {filteredCountry.capital}</p>\r\n            <p>area {filteredCountry.area}</p>\r\n            <h5>languages:</h5>\r\n            {/* {typeof filteredCountry.languages} */}\r\n            {console.log(Object.entries(filteredCountry.languages))}\r\n            <img src={filteredCountry.flags.png} alt={`${filteredCountry.name.common} flag`}/>\r\n        </div>\r\n        \r\n        )\r\n    )\r\n}\r\n\r\nexport default Countries"]},"metadata":{},"sourceType":"module"}
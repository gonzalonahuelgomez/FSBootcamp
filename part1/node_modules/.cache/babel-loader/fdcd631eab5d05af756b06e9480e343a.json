{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CPS-DLLO#14\\\\FSBootcamp\\\\part1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 43\n}, this);\n\n_c = Button;\n\nconst Display = ({\n  text,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: [text, \" \", value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 36\n}, this);\n\n_c2 = Display;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n\n  const handleClickGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n    setAverage(average + 1);\n    setPositive(positive + 1);\n  };\n\n  const handleClickNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n\n  const handleClickBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n    setAverage(average - 1);\n    setPositive(positive - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleClickGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleClickNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleClickBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"average\",\n      value: (good - bad) / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"positive\",\n      value: good / all * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"4gnNStmv2er021Bn8O2GURCE9pg=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/CPS-DLLO#14/FSBootcamp/part1/src/App.js"],"names":["useState","Button","handleClick","text","Display","value","App","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","average","setAverage","positive","setPositive","handleClickGood","handleClickNeutral","handleClickBad"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { useState } from 'react';\r\n\r\nconst Button = ({ handleClick, text }) => <button onClick={ handleClick }>{ text }</button>\r\n\r\nconst Display = ({text, value}) => <h1>{text} {value}</h1>\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n  const [all, setAll] = useState(0)\r\n  const [average, setAverage] = useState(0)\r\n  const [positive, setPositive] = useState(0)\r\n  const handleClickGood = () => {\r\n    setGood(good + 1)\r\n    setAll(all + 1)\r\n    setAverage(average + 1)\r\n    setPositive(positive + 1)\r\n  }\r\n const handleClickNeutral = () => {\r\n    setNeutral(neutral + 1)\r\n    setAll(all + 1)\r\n  }\r\n  const handleClickBad = () => {\r\n    setBad(bad + 1)\r\n    setAll(all + 1)\r\n    setAverage(average - 1)\r\n    setPositive(positive - 1)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h1>give feedback</h1>\r\n      <Button handleClick={handleClickGood} text='good' />\r\n      <Button handleClick={handleClickNeutral} text='neutral' />\r\n      <Button handleClick={handleClickBad} text='bad' />\r\n      <h1>statistics</h1>\r\n      <Display text='good' value={good} />\r\n      <Display text='neutral' value={neutral} />\r\n      <Display text='bad' value={bad} />\r\n      <Display text='all' value={all} />\r\n      <Display text='average' value={(good - bad) / all} />\r\n      <Display text='positive' value={good / all * 100} />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}